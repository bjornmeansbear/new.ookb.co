/* Grid
–––––––––––––––––––––––––––––––––––––––––––––––––– */
*,
*:before,
*:after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  position: relative;
  /* type stuff */
  /**/
  -moz-font-feature-settings: "kern";
  -webkit-font-feature-settings: "kern";
  -ms-font-feature-settings: "kern";
  -o-font-feature-settings: "kern";
  font-feature-settings: "kern";
  font-kerning: normal;
  text-rendering: optimizeLegibility;
  line-height: 1.618em;
}
html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%;
}
/*
   super simple CF from the very end of here:
   http://css-tricks.com/snippets/css/clear-fix/ — only works in IE8+,
   so not so super back compatible — but we're looking to the future!
*/
.clearfix::after,
.group::after,
.row::after {
  content: "";
  display: table;
  clear: both;
}
.text-center,
.center-text {
  text-align: center;
}
.text-left,
.left-align-text {
  text-align: left;
}
.text-right,
.right-align-text {
  text-align: right;
}
/* columnar stuff */
.container {
  margin: 0 auto;
  padding: 0 1rem 2rem 1rem;
  width: 100%;
}
.column,
.columns {
  margin: 0 0 2rem 0;
  padding: 0;
}
.group,
.row {
  margin: 0 0 2rem 0;
}
.one,
.two,
.three,
.four,
.five,
.six,
.halfwidth,
.seven,
.eight,
.nine,
.ten,
.eleven,
.twelve,
.fullwidth {
  width: calc(100%);
}
/** still need to flesh this out **/
.visible-sm {
  display: block;
  visibility: visible;
}
.visible-lg {
  display: none;
  visibility: hidden;
}
@media (min-width: 30rem) {
  .container {
    margin: 0 auto;
    padding-bottom: 2rem;
    min-width: 30rem;
    width: 80%;
  }
}
@media (min-width: 50rem) {
  .left {
    float: left;
  }
  .right {
    float: right;
  }
  .clear,
  .clearBoth {
    display: block;
    clear: both;
  }
  .clearLeft {
    display: block;
    clear: left;
  }
  .clearRight {
    display: block;
    clear: right;
  }
  .container {
    margin: 0 auto;
    padding-bottom: 2rem;
    max-width: 75rem;
  }
  /* columnar stuff */
  .column,
  .columns {
    float: left;
    margin: 0 0 2rem 0;
    padding: 0 1rem;
  }
  .group,
  .row {
    margin: 0 -1rem 2rem -1rem;
  }
  /* default 12 column grid */
  /*
     too add or remove, simply add the additional columns,
     and then replace "12" in all the calculations below with whatever
     number of columns you wish to use. 5, 8, 16, 101, whatever.
     We're working on a clever-er way to make this work.
     You'll need to add classes up above too if you make more columns.
  */
  .one {
    width: calc(8.33333333%);
  }
  .two {
    width: calc(16.66666667%);
  }
  .three {
    width: calc(25%);
  }
  .four {
    width: calc(33.33333333%);
  }
  .five {
    width: calc(41.66666667%);
  }
  .six,
  .halfwidth {
    width: calc(50%);
  }
  .seven {
    width: calc(58.33333333%);
  }
  .eight {
    width: calc(66.66666667%);
  }
  .nine {
    width: calc(75%);
  }
  .ten {
    width: calc(83.33333333%);
  }
  .eleven {
    width: calc(91.66666667%);
  }
  .twelve,
  .fullwidth {
    width: calc(100%);
  }
  /* some standard offsets */
  .offset-by-one {
    margin-left: calc(8.33333333%);
  }
  .offset-by-two {
    margin-left: calc(16.66666667%);
  }
  .offset-by-three {
    margin-left: calc(25%);
  }
  .offset-by-four {
    margin-left: calc(33.33333333%);
  }
  .offset-by-five {
    margin-left: calc(41.66666667%);
  }
  .offset-by-six,
  .offset-by-half {
    margin-left: calc(50%);
  }
  .offset-by-seven {
    margin-left: calc(58.33333333%);
  }
  .offset-by-eight {
    margin-left: calc(66.66666667%);
  }
  .offset-by-nine {
    margin-left: calc(75%);
  }
  .offset-by-ten {
    margin-left: calc(83.33333333%);
  }
  .offset-by-eleven {
    margin-left: calc(91.66666667%);
  }
  .offset-by-twelve {
    margin-left: calc(100%);
  }
  .visible-lg {
    display: block;
    visibility: visible;
  }
  .visible-sm {
    display: none;
    visibility: hidden;
  }
}
/* Base Styles
–––––––––––––––––––––––––––––––––––––––––––––––––– */
/* NOTE
html is set to 100% so that all the REM measurements throughout this doc are
are based on 16px sizing. So basically 1rem = 16px :) — should a better solution be devised? */
html {
  font-size: 100%;
}
body {
  font-size: 1em;
  /* currently ems cause chrome bug misinterpreting rems on body element */
  line-height: 1.618em;
  font-weight: 400;
  /* do I want a better, wider ranging font-stack? */
  font-family: "HelveticaNeue", "Helvetica Neue", Helvetica, Arial, sans-serif;
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
  text-rendering: optimizeLegibility;
}
/* Base Typography
–––––––––––––––––––––––––––––––––––––––––––––––––– */
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: 1.5rem;
  font-weight: bold;
}
h1 {
  font-size: 3.0rem;
}
h2 {
  font-size: 2.5rem;
}
h3 {
  font-size: 2.0rem;
}
h4 {
  font-size: 1.75rem;
}
h5 {
  font-size: 1.5rem;
}
h6 {
  font-size: 1.33rem;
}
/* Larger than phablet */
/* these aren't currently being changed... though perhaps they need to be */
@media (min-width: 30rem) {
  h1 {
    font-size: 3.0rem;
  }
  h2 {
    font-size: 2.5rem;
  }
  h3 {
    font-size: 2.0rem;
  }
  h4 {
    font-size: 1.75rem;
  }
  h5 {
    font-size: 1.5rem;
  }
  h6 {
    font-size: 1.33rem;
  }
}
p {
  margin-top: 0;
  margin-bottom: 1em;
}
.lead {
  font-size: 1.25rem;
  font-weight: 300;
}
small,
.small {
  font-size: .9rem;
}
img {
  max-width: 100%;
}
/* Centering in the unknown */
/* from http://css-tricks.com/centering-in-the-unknown/
  ---------------------------------------------------------*/
/* This parent can be any width and height */
.block {
  text-align: center;
}
/* The ghost, nudged to maintain perfect centering */
.block::before {
  content: '';
  display: inline-block;
  height: 100%;
  vertical-align: middle;
  margin-right: -0.25em;
  /* Adjusts for spacing */
}
/* The element to be centered, can
   also be of any width and height */
.centered {
  display: inline-block;
  vertical-align: middle;
  width: 300px;
}
/* List control stuff */
ol,
ul {
  margin-bottom: 1em;
}
ol {
  list-style: decimal;
}
ul {
  list-style: initial;
}
ol li,
ul li {
  line-height: 1.618em;
}
/** Some basic table styling **/
table {
  border-top: 2px solid;
  border-bottom: 2px solid;
}
table thead {
  text-align: left;
  border-bottom: 2px solid;
}
table tbody tr:nth-child(odd) {
  background: rgba(0, 0, 0, 0.075);
}
table tr th,
table tr td {
  padding: .4em;
  border-right: 1px solid rgba(0, 0, 0, 0.15);
}
table tr th:last-child,
table tr td:last-child {
  border-right: none;
}


/**
  responsive way to wrap iframes/embedded objects.
  best to not inline style things — and especially don't declare height/widths inline
**/

.embed-wrapper {
  position: relative;
  /** padding-bottom = calc(100% * height / width); of the children elements... works best if everything is the same height [like if its a slideshow] **/
  padding-bottom: calc(315 / 480 * 100%); /** this might need to be set dynamically based on embedded content ratio **/
  height: 0;
  overflow: hidden;
  width: 100%;
  margin-bottom: 2em;
}

.embed-wrapper iframe,
.embed-wrapper object,
.embed-wrapper embed {
  border: 0 !important;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  width: 100%;
  height: 100%;
}
