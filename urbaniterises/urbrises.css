/** variables **/
/** mini CSS modules **/
.mlrauto {
  margin-left: auto;
  margin-right: auto;
}
.z999 {
  z-index: 999;
}
.allcaps,
.uppercase {
  text-transform: uppercase;
}
.fullwidth,
.w100 {
  width: 100%;
}
.cover {
  margin: 0;
  padding: 0;
}
/** grid **/
.columns {
  box-sizing: border-box;
  position: relative;
  min-height: 1px;
  /** padding of .75em on each side creates nice 1.5em gutters that then will get biggere/smaller as type sizes increase/decrease **/
  padding-right: .75em;
  padding-left: .75em;
  line-height: 1.5em;
  /** allows for better "adaptive" styling AND matching of gutter widths to line-heights **/
}
.one,
.two,
.three,
.four,
.five,
.six,
.seven,
.eight,
.nine,
.ten,
.eleven,
.twelve,
.thirteen,
.fourteen,
.fifteen {
  width: calc(100%);
}
@media (min-width: 52em) {
  /**52em is medium cutoff from BassCss **/
  .columns {
    float: left;
  }
  .columns.right {
    float: right;
  }
  .one {
    width: calc(6.66666667%);
  }
  .two {
    width: calc(13.33333333%);
  }
  .three {
    width: calc(20%);
  }
  .four {
    width: calc(26.66666667%);
  }
  .five {
    width: calc(33.33333333%);
  }
  .six {
    width: calc(40%);
  }
  .seven {
    width: calc(46.66666667%);
  }
  .half {
    width: 50%;
  }
  .eight {
    width: calc(53.33333333%);
  }
  .nine {
    width: calc(60%);
  }
  .ten {
    width: calc(66.66666667%);
  }
  .eleven {
    width: calc(73.33333333%);
  }
  .twelve {
    width: calc(80%);
  }
  .thirteen {
    width: calc(86.66666667%);
  }
  .fourteen {
    width: calc(93.33333333%);
  }
  .fifteen {
    width: calc(100%);
  }
  /** is there a more programmatic way to do this with less? some sort of function that would generate all of these??? **/
  .offset-by-one {
    margin-left: calc(6.66666667%);
  }
  .offset-by-two {
    margin-left: calc(13.33333333%);
  }
  .offset-by-three {
    margin-left: calc(20%);
  }
  .offset-by-four {
    margin-left: calc(26.66666667%);
  }
  .offset-by-five {
    margin-left: calc(33.33333333%);
  }
  .offset-by-six {
    margin-left: calc(40%);
  }
  .offset-by-seven {
    margin-left: calc(46.66666667%);
  }
  .offset-by-half {
    margin-left: 50%;
  }
  .offset-by-eight {
    margin-left: calc(53.33333333%);
  }
  .offset-by-nine {
    margin-left: calc(60%);
  }
  .offset-by-ten {
    margin-left: calc(66.66666667%);
  }
  .offset-by-eleven {
    margin-left: calc(73.33333333%);
  }
  .offset-by-twelve {
    margin-left: calc(80%);
  }
  .offset-by-thirteen {
    margin-left: calc(86.66666667%);
  }
  .offset-by-fourteen {
    margin-left: calc(93.33333333%);
  }
  .offset-by-fifteen {
    margin-left: calc(100%);
  }
}
/** styling! **/
body {
  font-family: Helvetica, Arial, sans-serif;
  padding-top: 4em;
}
.simple-story h1,
.simple-story h2,
.simple-story h3,
.simple-story h4,
.simple-story h5,
.simple-story h6,
.simple-story p,
.simple-story .mw48rem {
  width: 45rem;
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}
.simple-story section p,
.simple-story section pre,
.simple-story section ul,
.simple-story section ol,
.simple-story section blockquote {
  font-size: 1.125rem;
  line-height: 1.5em;
  font-weight: 300;
  white-space: normal;
}
.simple-story section p,
.simple-story section pre {
  margin-top: 0;
  margin-bottom: 0;
  padding: 0 0em;
  text-indent: 1.5em;
}
.simple-story section p:first-child {
  text-indent: 0;
}
.ad {
  background: #eee;
}
